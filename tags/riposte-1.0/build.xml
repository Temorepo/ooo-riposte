<?xml version="1.0"?>
<project name="riposte" basedir="." default="compile" xmlns:artifact="urn:maven-artifact-ant">
  <property name="jsrc.dir" value="src/main/java"/>
  <property name="asrc.dir" value="src/main/as"/>
  <property name="deploy.dir" value="dist"/>
  <property name="classes.dir" value="${deploy.dir}/classes"/>

  <!-- we read our flexsdk.dir from build.properties when building standalone -->
  <property file="etc/build.properties"/>

  <property name="maven-ant.vers" value="2.1.1"/>
  <property name="maven-ant.dir" value="${user.home}/.m2/ant-support"/>
  <property name="maven-ant.jar" value="${maven-ant.dir}/maven-ant-tasks-${maven-ant.vers}.jar"/>
  <property name="maven-ant.url"
            value="http://mirrors.ibiblio.org/pub/mirrors/apache/maven/binaries"/>
  <condition property="maven-ant.exists"><available file="${maven-ant.jar}"/></condition>
  <target name="-download-maven-ant" unless="maven-ant.exists">
    <mkdir dir="${maven-ant.dir}"/>
    <get src="${maven-ant.url}/maven-ant-tasks-${maven-ant.vers}.jar"
         dest="${maven-ant.jar}" usetimestamp="true"/>
  </target>

  <target name="-init-maven-ant" depends="-download-maven-ant">
    <taskdef resource="org/apache/maven/artifact/ant/antlib.xml"
             uri="urn:maven-artifact-ant" classpath="${maven-ant.jar}"/>
    <artifact:pom id="pom" file="pom.xml"/>
    <artifact:dependencies pathId="compile.classpath" pomRefId="pom" useScope="compile"/>
  </target>

  <target name="-prepare" depends="-init-maven-ant">
    <mkdir dir="${deploy.dir}"/>
    <path id="built.classpath">
      <path refid="compile.classpath"/>
      <pathelement location="${classes.dir}"/>
    </path>
  </target>

  <target name="clean" description="Cleans out build results">
    <delete dir="${deploy.dir}/classes"/>
    <delete dir="${deploy.dir}/docs"/>
    <delete failonerror="false"><fileset dir="${deploy.dir}" includes="*.jar"/></delete>
    <delete failonerror="false"><fileset dir="${deploy.dir}" includes="*.swc"/></delete>
  </target>

  <target name="distclean" description="Scorched earth clean">
    <delete dir="${deploy.dir}"/>
  </target>

  <target name="compile" depends="-prepare" description="Builds the Java code.">
    <mkdir dir="${classes.dir}"/>
    <copy todir="${classes.dir}"><fileset dir="src/main/resources" includes="**"/></copy>
    <javac srcdir="${jsrc.dir}" destdir="${classes.dir}" includeAntRuntime="false"
           debug="on" optimize="${build.optimize}" deprecation="on" source="1.5" target="1.5">
      <classpath refid="compile.classpath"/>
      <compilerarg value="-Xlint"/>
      <compilerarg value="-Xlint:-serial"/>
    </javac>
  </target>

  <target name="-checkaslib">
    <condition property="no_build_aslib">
      <not><available file="${flexsdk.dir}/lib/compc.jar"/></not>
    </condition>
    <condition property="no_rebuild_aslib"><or>
      <isset property="no_build_aslib"/>
      <uptodate targetfile="${deploy.dir}/${ant.project.name}lib.swc">
        <srcfiles dir="${asrc.dir}" includes="**/*.as"/>
      </uptodate>
    </or></condition>
  </target>
  <target name="-noteaslib" if="no_build_aslib"><echo>
    NOTE: not building ActionScript library. Pass -Dflexsdk.dir=DIR to
    activate ActionScript library build.
  </echo></target>

  <target name="-asprepare" depends="-prepare,-checkaslib">
    <!-- obtain our ActionScript dependencies via Maven -->
    <artifact:pom id="as-pom" file="as-pom.xml"/>
    <artifact:dependencies filesetId="aslibs.fileset" pomRefId="as-pom" useScope="compile"/>
    <copy todir="${deploy.dir}/lib">
      <fileset refid="aslibs.fileset"/>
      <mapper type="flatten"/>
    </copy>
  </target>

  <target name="aslib" unless="no_rebuild_aslib" depends="-asprepare,-noteaslib"
          description="Builds the ActionScript code">
    <copy file="etc/aslib-config.xml.in" tofile="${deploy.dir}/aslib-config.xml">
      <filterset>
        <filter token="flex_sdk_dir" value="${flexsdk.dir}"/>
        <filter token="lib_name" value="${ant.project.name}"/>
      </filterset>
    </copy>
    <java jar="${flexsdk.dir}/lib/compc.jar" fork="true" failonerror="true">
      <arg value="-load-config"/>
      <arg value="${deploy.dir}/aslib-config.xml"/>
      <arg value="-compiler.optimize"/>
      <arg value="-compiler.source-path=${asrc.dir}/"/>
      <arg value="-include-sources=${asrc.dir}/"/>
      <arg value="-output"/>
      <arg value="${deploy.dir}/${ant.project.name}lib.swc"/>
    </java>
    <delete file="${deploy.dir}/aslib-config.xml"/>
  </target>

  <target name="javadoc" depends="-prepare" description="Builds javadoc documentation">
    <property name="javadoc.dir" value="docs/javadoc"/>
    <property name="doc.overview" value="docs/overview.html"/>
    <tstamp><format property="year" pattern="yyyy"/></tstamp>
    <javadoc windowtitle="${ant.project.name} API" doctitle="${ant.project.name} API"
             overview="${doc.overview}" destdir="${javadoc.dir}">
      <packageset dir="${jsrc.dir}"/>
      <bottom>Copyright &#169; 2009-${year} Nathan Curtis.  All Rights Reserved.</bottom>
      <classpath refid="compile.classpath"/>
      <link href="http://download.oracle.com/javase/1.5.0/docs/api/"/>
      <link href="http://samskivert.com/code/samskivert/docs/"/>
      <link href="http://www.threerings.net/code/narya/docs/api/"/>
      <link href="http://guava-libraries.googlecode.com/svn/trunk/javadoc/"/>
      <link href="http://google-guice.googlecode.com/svn/trunk/javadoc/"/>
      <link href="http://java.sun.com/products/servlet/2.5/docs/servlet-2_5-mr2/"/>
    </javadoc>
  </target>

  <target name="asdoc" unless="no_build_aslib" depends="-asprepare"
          description="Builds the ActionScript documention">
    <property name="asdoc.dir" value="docs/actionscript"/>
    <java classpath="${flexsdk.dir}/lib/asdoc.jar" classname="flex2.tools.ASDoc" fork="true">
      <jvmarg value="-Xmx1024m"/>
      <jvmarg value="-Dsun.io.useCanonCashes=false"/>
      <jvmarg value="-Xbootclasspath/p:${flexsdk.dir}/asdoc/lib/xalan.jar"/>
      <arg value="+flexlib=${flexsdk.dir}/frameworks"/>
      <arg line="-library-path=${flexsdk.dir}/frameworks/libs"/>
      <arg line="-library-path+=${deploy.dir}/lib/aspirin.swc"/>
      <arg line="-library-path+=${deploy.dir}/lib/naryalib.swc"/>
      <arg line="-templates-path ${flexsdk.dir}/asdoc/templates"/>
      <arg line="-doc-sources ${asrc.dir}"/>
      <arg line="-output ${asdoc.dir}"/>
    </java>
  </target>

  <target name="dist" depends="compile,aslib" description="Compiles code, builds jar files.">
    <jar destfile="${deploy.dir}/${ant.project.name}.jar" basedir="${classes.dir}"/>
  </target>

  <property name="maven.deploy.repo" value="file://${user.home}/.m2/repository"/>
  <target name="maven-deploy" depends="dist" 
          description="Deploys our build artifacts to a Maven repository.">
    <jar basedir="${jsrc.dir}" destfile="${deploy.dir}/${ant.project.name}-sources.jar"/>
    <artifact:deploy file="${deploy.dir}/${ant.project.name}.jar" uniqueVersion="false">
      <remoteRepository url="${maven.deploy.repo}"/>
      <pom refid="pom"/>
      <attach file="${deploy.dir}/${ant.project.name}-sources.jar" classifier="sources"/>
    </artifact:deploy>
    <artifact:pom id="tools-pom" file="tools-pom.xml"/>
    <artifact:deploy file="${deploy.dir}/${ant.project.name}.jar" uniqueVersion="false">
      <remoteRepository url="${maven.deploy.repo}"/>
      <pom refid="tools-pom"/>
    </artifact:deploy>
    <artifact:pom id="as-pom" file="as-pom.xml"/>
    <artifact:deploy file="${deploy.dir}/${ant.project.name}lib.swc" uniqueVersion="false">
      <remoteRepository url="${maven.deploy.repo}"/>
      <pom refid="as-pom"/>
    </artifact:deploy>
  </target>
</project>
